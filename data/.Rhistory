boggle("sdfsdfsdf")
?load
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd")}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),.GlobalEnv)}
print(ls())
if(length(inputstring)==16){
# sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],1,
#       function(x){ if(sum(sapply(1:length(impossiblecombinations),
#          function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})
}
print(environment)
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("sdfsdfsdf")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd")}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""))}
print(ls())
print(environment)
if(length(inputstring)==16){
sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("fnnasipnorosdotn")
myfunc <- function() {y <- 1; ls()}
myfunc()                # shows "y"
?load
print(environment)
print(env)
environment()
boggle
ls
mean
boggle
environment(boggle)
ls)=
ls()
print(environment)
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd")}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""))}
print(environment)
if(length(inputstring)==16){
sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
?exists
?load
environment()
load("/Users/ling-jwe/supply/data/bogglewalks9.rd")
ls()
rm(bogglewalks9)
ls()
rm(bogglewalks9)
load("/Users/ling-jwe/supply/data/bogglewalks9.rd")
ls()
bogglewalks9
tmp=function(x){
if(!exists("bogglewalks9")
print("object does not exist")
}
tmp=function(x){
if(!exists("bogglewalks9"))
print("object does not exist")
}
tmp()
ls()
rm(bogglewalks9)
tmp()
tmp=load("/Users/ling-jwe/supply/data/bogglewalks9.rd")
ls()
head(tmp)
class(tmp)
rm(tmp)
rm(bogglewalk9)
rm(bogglewalks9)
tmp=function(x){
if(!exists("bogglewalks9",envir=))
print("object does not exist")
print(environment)
}
tmp()
?load
tmp=function(x){
if(!exists("bogglewalks9",envir=))
print("object does not exist")
load("/Users/ling-jwe/supply/data/bogglewalks9.rd")
}
ls9)
ls()
tmp()
ls()
tmp=function(x){
if(!exists("bogglewalks9",envir=))
print("object does not exist")
load("/Users/ling-jwe/supply/data/bogglewalks9.rd",envir=.GlobalEnv)
}
tmp()
ls()
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
print(environment)
if(length(inputstring)==16){
sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("remwaitek")
boggle("amivptjepisatodn")
nchar("amivptjepisatodn")
ls()
nrow(bogglewalks16)
head(bogglewalks16)
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
if(length(inputstring)==16){
sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),100),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))!=0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("amivptjepisatodn")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
if(length(inputstring)==16){
sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),100),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))!=0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("amivptjepisatodn")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
if(length(inputstring)==16){
print("we are here")
sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),100),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))!=0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("amivptjepisatodn")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
if(length(inputstring)==16){
sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),10),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))<0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("amivptjepisatodn")
boggle("amivptjepisatodn")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
if(length(inputstring)==16){
print(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),10),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("amivptjepisatodn")
boggle("amivptjepisatodn")
boggle("amivptjepisatodn")
boggle("amivptjepisatodn")
boggle("amivptjepisatodn")
boggle("amivptjepisatodn")
boggle("amivptjepisatodn")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
if(length(inputstring)==16){
print(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),100),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("amivptjepisatodn")
boggle("amivptjepisatodn")
boggle("amivptjepisatodn")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
if(length(inputstring)==16){
print(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("amivptjepisatodn")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
if(length(inputstring)==16){
print(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("amivptjepisatodn")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
if(length(inputstring)==16){
sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("amivptjepisatodn")
boggle("daarirteu")
class(bogglewalks16)
class(bogglewalks9)
head(bogglewalks16)
head(bogglewalks9)
matrix(bogglewalks16)
head(as.matrix(bogglewalks16))
class(as.matrix(bogglewalks16))
tmp=as.matrix(bogglewalks16)
head(tmp)
tmp=matrix(c(1,2,3,4),ncol=2)
tmp
colnames(tmp)
rownames(tmp)
tmp=as.matrix(bogglewalks16)
colnames(tmp)
colnames(tmp)=NULL
head(tmp)
rownames(tmp)[1:2]
rownames(tmp)=NULL
head(tmp)
bogglewalks16=tmp
head(bogglewalks16)
save(bogglewalks16,file="/Users/ling-jwe/supply/data/bogglewalks16.rd")
ls()
head(bogglewalks9)
rownames(bogglewalks9)
colnames(bogglewalks9)=NULL
head(bogglewalks9)
class(bogglewalks9)
class(bogglewalks16)
save(bogglewalks9,file="/Users/ling-jwe/supply/data/bogglewalks9.rd")
ls()
rm(bogglewalks9)
rm(bogglewalks16)
ls()
load("/Users/ling-jwe/supply/data/bogglewalks9.rd")
ls()
head(bogglewalks9)
class(bogglewalks9)
load("/Users/ling-jwe/supply/data/bogglewalks16.rd")
class(bogglewalks16)
head(bogglewalks16)
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
if(length(inputstring)==16){
sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("fnnasipnorosdotn")
boggle("fnnasipnorosdotn")
boggle("udaazeepm")
head(bogglewalks16)
bogglewalks16[sample(1:nrow(bogglewalks16),10),]
class(bogglewalks16[sample(1:nrow(bogglewalks16),10),])
nrow(bogglewalks16)
ncol(bogglewalks16)
length(bogglewalks16)
?mapply
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
bogglewalks16=bogglewalks16[1:1000,]
if(length(inputstring)==16){
sort(do.call(rbind,apply(bogglewalks16,MARGIN=1, #bogglewalks16[sample(1:nrow(bogglewalks16),1000),],MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("fnnasipnorosdotn")
boggle("fnnasipnorosdotn")
boggle("etipaeregnsoette")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
# print(environment)
bogglewalks16=bogglewalks16[1:1000,]
if(length(inputstring)==16){
print(do.call(rbind,apply(bogglewalks16,MARGIN=1, #bogglewalks16[sample(1:nrow(bogglewalks16),1000),],MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("etipaeregnsoette")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
if(length(inputstring)==16){
print(sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],MARGIN=1,
function(x){if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}}))))
}
if(length(inputstring)==9){
sort(do.call(rbind,apply(bogglewalks9,MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("etipaeregnsoette")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
if(length(inputstring)==16){
class(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],MARGIN=1,
function(x){if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==9){
class(do.call(rbind,apply(bogglewalks9,MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("etipaeregnsoette")
boggle("etipaereg")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
if(length(inputstring)==9){
class(do.call(rbind,apply(bogglewalks9,MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
if(length(inputstring)==16){
class(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],MARGIN=1,
function(x){if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}})))
}
}
boggle("etipaeregnsoette")
boggle=function(inputstring){
if(!exists("impossiblecombinations")){load("/Users/ling-jwe/supply/data/impossiblecombinations.rd",envir=.GlobalEnv)}
inputstring=strsplit(inputstring,split="")[[1]]
if(!exists(paste("bogglewalks",length(inputstring),sep=""))){load(paste("/Users/ling-jwe/supply/data/bogglewalks",length(inputstring),".rd",sep=""),envir=.GlobalEnv)}
if(length(inputstring)==16){
return(sort(do.call(rbind,apply(bogglewalks16[sample(1:nrow(bogglewalks16),1000),],MARGIN=1,
function(x){if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}}))))
}
if(length(inputstring)==9){
return(sort(do.call(rbind,apply(bogglewalks9,MARGIN=1,
function(x){ if(sum(sapply(1:length(impossiblecombinations),
function(pattern){regexpr(impossiblecombinations[pattern],paste(inputstring[x],collapse=""))>0}))==0){paste(inputstring[x],collapse="")}}))))
}
}
boggle("etipaeregnsoette")
boggle("etipaereg")
boggle("rilaijnom")
boggle("remwaitek")
boggle("geaornsug")
boggle("tegsmeaet")
boggle("wundeogeh")
boggle("etsirellf")
boggle("vedeonlte")
boggle("masrnietn")
boggle("ovlhaascl")
boggle("nwttuipts")
boggle("lufkluewa")
boggle("udaazeepm")
boggle("pnuioavet")
boggle("rilaijnom")
boggle("nanetlsop")
boggle("renededie")
?sys.time
?system.time
sytem.time(boggle("serctehva"))
system.time(boggle("serctehva"))
boggle("serctehva")
boggle("daarirteu")
boggle("tennveeme")
boggle("gniplsoos")
boggle("ealiuvtae")
boggle("idneoenvb")
boggle("akadgaenz")
boggle("eganalrvo")
sytem.time(boggle("eganalrvo"))
system.time(boggle("eganalrvo"))
